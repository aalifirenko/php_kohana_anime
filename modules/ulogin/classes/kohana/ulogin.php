<?php defined('SYSPATH') or die('No direct script access.');

class Kohana_Ulogin {
    
    protected $config = array(
        // Возможные значения: small, panel, window
        'type'             => 'panel',
        
        // на какой адрес придёт POST-запрос от uLogin
        'redirect_uri'     => NULL,
        
        // Сервисы, выводимые сразу
        'providers'        => array(
            'vkontakte',
            'facebook',
            'twitter',
            'google',
            'odnoklassniki',
            'mailru',
            'livejournal',
            'openid'
        ),
        
        // Выводимые при наведении
        //'hidden'         => array(),
        
        // Эти поля используются для значения поля username в таблице users
        'username'         => array (
            'first_name',
        ),
        
        // Обязательные поля
        'fields'         => array(
            'email',
        ),
        
        // Необязательные поля
        'optional'        => array(
            'photo_big',
        ),
    );
    
    protected static $_used_id = array();
    
    public static function factory(array $config = array())
    {
        return new Ulogin($config);
    }
    
    public function __construct(array $config = array())
    {
        $this->config = array_merge($this->config, Kohana::$config->load('ulogin')->as_array(), $config);
        
        if ($this->config['redirect_uri'] === NULL)
            $this->config['redirect_uri'] = Request::initial()->url(true);
    }
    
    public function render()
    {    
        $params =     
            'display='.$this->config['type'].
            '&fields='.implode(',', array_merge($this->config['username'], $this->config['fields'])).
            '&providers='.implode(',', $this->config['providers']).
            //'&hidden='.implode(',', $this->config['hidden']).
            '&redirect_uri='. URL::base(true) . "social-auth" .
            '&optional=photo_big';
        
        $view = View::factory('ulogin/ulogin')
                    ->set('cfg', $this->config)
                    ->set('params', $params);
        do
        {
            $uniq_id = "uLogin_".rand();
        }
        while(in_array($uniq_id, self::$_used_id));
        
        self::$_used_id[] = $uniq_id;
        
        $view->set('uniq_id', $uniq_id);
        
        return $view->render();
    }
    
    public function __toString()
    {
        try
        {
            return $this->render();
        }
        catch(Exception $e)
        {
            Kohana_Exception::handler($e);
            return '';
        }
    }
    
    public function login()
    {
        if (empty($_POST['token']))
            throw new Kohana_Exception('Empty token.');
            
        if (!($domain = parse_url(URL::base(), PHP_URL_HOST)))
        {
            $domain = isset($_SERVER['HTTP_HOST']) ? $_SERVER['HTTP_HOST'] : $_SERVER['SERVER_NAME'];
        }
        $s = Request::factory('http://ulogin.ru/token.php?token=' . $_POST['token'] . '&host=' . $domain)->execute()->body();
        $user = json_decode($s, true);
                
        $ulogin = ORM::factory('ulogin', array('identity' => $user['identity']));
        
        if (!$ulogin->loaded())
        {
            if (($orm_user = Auth::instance()->get_user()))
            {
                $this->create_ulogin($ulogin, $user);
            }
            else
            {
                $data['username'] = '';
                foreach($this->config['username'] as $part_of_name)
                    $data['username'] .= (empty($user[$part_of_name]) ? '' : ($user[$part_of_name]));
                
                $data['username'] = substr($user['network'], 0, 2) . "_" . strtolower(trim($data['username']));
                $data['full_name'] = $user['first_name'] . " " . $user['last_name'];
                $data['avatar'] = $user['photo_big'];

                if (!$data['username'])
                    throw new Kohana_Exception('Username fields not set in config/ulogin.php');
                    
                $data['password'] = md5('ulogin_autogenerated_password'.microtime(TRUE));
                
                $cfg_fields = array_merge($this->config['fields'], $this->config['optional']);
                foreach($cfg_fields as $field)
                {
                    if (!empty($user[$field]))
                        $data[$field] = $user[$field];
                }
                $data['email'] = substr($user['network'], 0, 2) . "_" . $user['email'];
                            
                $orm_user = $this->create_new_user($data);
                
                $user['user_id'] = $orm_user->id;
                
                $this->create_ulogin($ulogin, $user);
                
                Auth::instance()->force_login($orm_user);
            }
        }
        else
        {
            Auth::instance()->force_login($ulogin->user);
        }
    }
    
    public function mode()
    {
        return !empty($_POST['token']);
    }
    
    protected function create_ulogin($ulogin, $post)
    {
        return $ulogin->values($post, array(
            'user_id',
            'identity',
            'network',
        ))->create();
    }

    protected function create_new_user($data)
    {
        $orm_user = ORM::factory('user')->values($data)->create();
        $orm_user->add('roles', ORM::factory('role', array('name' => 'login')));
        return $orm_user;
    }
    
}